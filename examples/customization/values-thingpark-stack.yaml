# Mandatory values & additional usual values to define for a Thingpark Wireless helm release.
# Advanced settings detailed in chart values file
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imagePullSecrets:
   - name: "thingpark-image-pull-secret"
  ### INSTALLATION ID ###
  # Provided by Actility
  installationId: "" # MANDATORY
  ### FEATURE ACTIVATION ###
  # Defaults disable Node Red 
  # featuresActivation:
  #   dxApi: true
  #   iotFlow: true
  #   nodeRed: false
  ### MAIL SETTINGS ###
  # Default configuration not need any mail relay
  outgoingMail: {}
    ## SMTP enabled configuration sample
    # outgoingMail: 
    #   smtpServer: "smtp.example.com"
    #   smtpAuth:
    #     login: "user"
    #     password: "pass"
    #   port: "465"
    #   noReplyEmail: "noreply@example.com"
    #   smtpSecurity: ssl
    ## Maximum time in minutes before an action permit sent by a user (e.g. forgot password e-mail) is expired. 
    ## This value is recommended to be short because it is expected that the user would react to self-created action quickly.
    #   actionTokenGeneratedByUserLifespan: 15
    ## Maximum time in minutes before an action permit sent to a user by admin (e.g. account creation) is expired. 
    ## This value is recommended to be long to allow admins send e-mails for users that are currently offline
    #   actionTokenGeneratedByAdminLifespan: 60
  ### AS SECURITY LEVEL ###
  # When set to 'strict' (recommanded), auto-signed certificates are rejected
  asSecurity: strict
  ### OPERATOR ###
  # MANDATORY: Defines the URL used to access the portal GUI
  operators:
    default: 
      domain: "wireless.thingpark.local"
      # name: "Custom Operator Name"
    thingpark:
      domain: "shared.thingpark.local"

  ### MAP SERVICE ###
  # External Map service configuration
  mapService: {}
  # Google maps as map service
  # mapService:
  #   defaultLocation: "" 
  #   api: "gmaps"
  #   apiKey: ""
  ## Openstreet maps config sample
  # mapService: 
  #   defaultLocation: ""
  #   api: "osm"
  #   osmTile: ""
  #   osmNominatim: ""

  ### LORA CONFIGURATION ###
  # MANDATORY: configure Lora networking regarding you use case 
  # WARNING : This parameter must be set at initial configuration of TPE Platform. Changing it afterwards can generate malfunction between the devices and the base stations
  lora:
    # List of ISM band. Must not be changed once base stations and devices are deployed.
    ismBand: 
    - "eu868"
    # LoRaWAN; 24 bits network identifier.A dedicated NetID assigned by the LoRa Alliance.
    netId: "000001"

  ### THINGPARK REPOSITORY CONFIGURATION ###
  # No additional configuration required when use production repositories
  repositories:
    containerImagesRegistry:
      # fqdn: "<private-registry>"

  oidcSso:
    authServer:
      scheme: https
      fqdn: *dnsHostname
      port: 443
      path: /auth

  ### SNMP CONFIGURATION ###
  ## Configure device & base station alarms notifications
  # snmp:
  #   trap:
  #     server: ""
  #     community: "public"

  ### THINGPARK WIRELESS SETTINGS ###
  # wireless:
  #  ## LoRaWAN traffic lifespan (days)
  #  ## Set the lifespan of LoRaWAN uplink and downlink frames. 
  #  ## The default value of 15 days is enough for a normal usage of ThingPark Wireless. 
  #  ## Extending the default value consumes hardware resources (RAM, Disk space), please contact your support before any change.
  #   deviceHistoryExpiration: 15
  
  ingress:
  ### INGRESS HOSTS CUSTOMIZATION (optional) ###
  ## Uncomment next hosts block to enable shared operator guis/api access
  #   hosts:
  #     - *dnsHostname
  #     - *sharedOperatorDnsHostname
  #   ## BASICS STATION LNS: you have to update the LNS service port, uncomment next line
  #   lnsPublicPort: 4443
  #   baseStation:
  #     ## Hash of the password configured in the base stations to connect the key-installer service. 
  #     ## The hash must be provided in the SHA512 format, for example using the openssl passwd -6 command. 
  #     ## This password should be set only if base stations are flashed with custom images.
  #     keyInstallerPasswordHash: 
  #     ## Set an alternative fqdn to use for base stations endpoints. It configure both IEC over TLS and LNS endpoints. 
  #     fqdn:
  ### INBOUND: TLS CERTIFICATE ###
  ## OPTION 1: Default configuration, A Selfsigned certificate is generated
  ## OPTION 2: Using a externally generated certificate
  ## Warning: global.ingress.tls.issuer.certificate must include server certificate first, and next the chain of trust
  #   tls:
  #     issuer: "external"
  #     ## Must include server certificate first, and next the chain of trust
  #     certificate: |
  #       -----BEGIN CERTIFICATE-----
  #       -----END CERTIFICATE-----
  #       -----BEGIN CERTIFICATE-----
  #       -----END CERTIFICATE-----
  #     key: | 
  #       -----BEGIN PRIVATE KEY-----
  #       -----END PRIVATE KEY-----
  #     ## Root certificate of authority that have issued server certiticate
  #     caCertificate: | 
  #       -----BEGIN PRIVATE KEY-----
  #       -----END PRIVATE KEY-----
  ## OPTION 3: Letsencrypt issued certificate. Uncomment acmeSolvers only if you want to use other challenge like dns
  #   tls:
  #     issuer: "letsencrypt"
  #     acmeEmail: foo@example.com
  #     acmeEmail: foo@example.com
  #       acmeSolvers:
  #       - http01:
  #           ingress:
  #             class: nginx-tpe
  #             podTemplate:
  #               spec:
  #                 imagePullSecrets:
  #                 - name: thingpark-image-pull-secret
  #     ## Root certificate of authority that have issued server certiticate
  #     caCertificate: | 
  #       -----BEGIN PRIVATE KEY-----
  #       -----END PRIVATE KEY-----

### BACKUP CONFIGURATION ###
## OPTIONAL: A storage volume is required for manual or automated
## OPTION 1: Configuration to use a minio local deployment ( https://docs.min.io/)
#   backup:
#     schedule: "30 2 * * *"
#     s3Compat: 
#       url: http://minio.thingpark-wireless-tools.svc:9000
#       accessKey: minio
#       secretAccessKey: minio123
#       bucket: "thingpark-wireless-backup"

## OPTION 2: Configuration to use AMAZON S3 bucket
## accessKey and secretAccessKey are optional. If not provided, EKS Node Group IAM Role must allow get/put to S3 backup bucket
#   backup:
#     schedule: "30 2 * * *"
#     amazon:
#       accessKey: 
#       secretAccessKey: 
#       region: us-east-2
#       bucket: "thingpark-wireless-backup"

## OPTION 3: Configuration to use Azure blob storage
#   backup:
#     schedule: "30 2 * * *"
#     azure:
#       resourceGroup: <resource group>
#       storageAccount: <storage account>
#       blobContainer: thingpark-wireless-backup
#       cloudName: AzurePublicCloud  # Available values: AzurePublicCloud AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud
#       subscriptionId: <>
#       tenantId: <>
#       clientId: <>
#       clientSecret: <>

#   Uncomment to use a custom trustore put in a Secret in following way:
#   kubectl create secret generic thingpark-ca-trusts --from-literal=truststore_password=changeme --from-file=truststore.jks=cacerts
#   truststoreSecretName: "thingpark-ca-trusts"

### DATABASE PASSWORD OVERRINDING ###
  # sqlDatabase:
  #   accounts:
  #     admin:
  #       username: root
  #       password: ""
  #     maintenance:
  #       username: maintenance
  #       password: "maintenance"
  #     twa:
  #       username: "twa"
  #       password: ""
  #     smp:
  #       username: "smp"
  #       password: ""
  #     ejbca:
  #       username: "ejbca"
  #       password: ""
  #     wlogger:
  #       username: "wlogger"
  #       password: ""
  #     tpdx:
  #       username: "tpdx"
  #       password: ""
  #     tpdxKeystore:
  #       username: tpdx_keystore
  #       password: ""
  #     tpdxDataflows:
  #       username: tpdx_dataflows
  #       password: ""
  #     tpxConnector:
  #       username: tpx_connector
  #       password: ""
  #     tpxFlowHub:
  #       username: tpx_flow_hub
  #       password: ""
  #     tpxFlowApi:
  #       username: tpx_flow_api 
  #       password: ""
  #     tpxFlowBridge:
  #       username: tpx_flow_bridge
  #       password: ""
  #     tpxFlowSupervisor:
  #       username: tpx_flow_supervisor
  #       password: ""

  # mongoDatabase:
  #   accounts:
  #     admin:
  #       username: clusterAdmin
  #       password: ""
  #     userAdmin:
  #       username: userAdmin
  #       password: ""
  #     userBackup:
  #       username: backup
  #       password: ""
  #     twa:
  #       username: twa
  #       password: ""
  #     smp:
  #       username: smplite
  #       password: ""
  #     rfscan:
  #       username: rfscan 
  #       password: ""
  #     netSurvey:
  #       username: "netsurvey"
  #       password: ""
  #     driver:
  #       username: "driver"
  #       password: ""
  #     keyInstaller:
  #       username: key-installer
  #       password: ""

# For the OPTION 1 Selfsigned certificate, next block should be uncommented
# Require a public access to ingress and a resolved FQDN 
# tpw-guis:
#   ingress:
#     items:
#       gui:
#         annotations:
#           cert-manager.io/issuer: "internal-ca-issuer"

# For the OPTION 3 Letencrypt, next block should be uncommented
# Require a public access to ingress and a resolved FQDN 
# tpw-guis:
#   ingress:
#     items:
#       gui:
#         annotations:
#           cert-manager.io/issuer: "letsencrypt-prod"

### INBOUND: FLOW & DNS ###
# Configure ingress-nginx controller for DNS and Inbound base station flows
ingress-nginx:
  imagePullSecrets: 
    - name: "thingpark-image-pull-secret"
# MANDATORY: configure ingress for inbound base stations:
# <namespace> MUST be replaced by your deployment namespace
  tcp:
    # Support ssh inbound
    2022: <namespace>/support-inbound:22
    # LRC tls inbounds
    3001: <namespace>/lrc-proxy:3001
    3101: <namespace>/lrc-proxy:3101
    # LRC sftp tls inbound
    3002: <namespace>/lrc-proxy:3002
    # Uncomment to expose Basics Station LNS endpoint
    # 4443: <namespace>/lrc-proxy-lns:8443

  controller:
    # image:
    #   registry: "<private-registry>"
    # admissionWebhooks:
    #   patch:
    #     image:
    #       registry: "<private-registry>"
# OPTIONAL: DNS dynamic provisioning
## OPTION1: AZURE controller configuration to attach DNS to loadbalancer 
## dnsHostname should be composed of Azure DNS alias followed by Azure region domain name (i.e. thingpark-wireless.westeurope.cloudapp.azure.com)
#  controller:
#    service:
#      annotations:
#        service.beta.kubernetes.io/azure-dns-label-name: thingpark-wireless
## OPTION2: AMAZON Route 53 subdomain using external-dns controller
## Use a comma list to use optional dashboard : external-dns.alpha.kubernetes.io/hostname: wireless.mycompany.org,dashboard.mycompany.org
#   controller:
#     service:
#       annotations:
#         external-dns.alpha.kubernetes.io/hostname: *dnsHostname


## Keycloak ReCAPTCHA configuration. ReCAPTCHA is defaultly disabled.
## Add valid key here to enable it. Can't be disabled after a first configuration
# keycloak:
#   captcha:
#     publicKey: ""
#     privateKey: ""

cert-manager:
  image:
    # registry: "<private-registry>"
  webhook:
    image:
      # registry: "<private-registry>"
  cainjector:
    image:
      # registry: "<private-registry>"
  acmesolver:
    image:
      # registry: "<private-registry>"
  startupapicheck:
    image:
      # registry: "<private-registry>"

